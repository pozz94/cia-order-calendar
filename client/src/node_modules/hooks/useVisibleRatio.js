import {useState, useEffect, useRef} from "react";

const useVisibleRatio = (thresholds = 100) => {
	const ref = useRef();
	const [visibleRatio, setVisibleRatio] = useState(0);

	useEffect(() => {
		const currentRef = ref.current
		const observer = new IntersectionObserver(([entry]) => {
			setVisibleRatio(entry.intersectionRatio);
			//console.log(visibleRatio);
		}, { threshold: [...Array(thresholds + 1).keys()].map(x => x / thresholds) })

		if(currentRef)
			observer.observe(currentRef)
		
		return () => {
			if(currentRef)
				observer.unobserve(currentRef)
		}
	}, [ref, visibleRatio, thresholds])

	return [visibleRatio, ref];
}

export default useVisibleRatio;