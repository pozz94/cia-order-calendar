import React, { Component } from "react";
import c from "UI/ScrollWrapper.module.css";

class ScrollWrapper extends Component {
	constructor(props) {
		super(props);
		this.state = { thumbHeight: "0", scrollTop: "0" };
	}

	content = React.createRef();
	track = React.createRef();
	thumb = React.createRef();
	calcThumbHeight = () => {
		if (this.content.current !== null) {
			this.setState({
				thumbHeight: Math.floor(
					this.content.current.clientHeight / this.content.current.scrollHeight * this.track.current.clientHeight
				) + "px",
				scrollTop: Math.floor(
					this.content.current.scrollTop / this.content.current.scrollHeight * this.track.current.clientHeight
				) + "px"
			});
		}
	};

	componentDidMount = () => {
		window.requestAnimationFrame(this.calcThumbHeight);
	}

	componentDidUpdate = () => {
		window.requestAnimationFrame(this.calcThumbHeight);
	}

	render = () => (
		<div
			className={[this.props.className, c.noScrollBar].join(" ")}
			//onMouseEnter={this.calcThumbHeight}
		>
			<div
				ref={this.content}
				className={c.content}
				//onScroll={this.calcThumbHeight}
			>
				{this.props.children}
			</div>
			<div
				ref={this.track}
				className={[c.track, "scrollTrack", this.props.trackClassName].join(" ")}
			>
				<div
					className={[c.thumb, "scrollThumb", this.props.thumbClassName].join(" ")}
					ref={this.thumb}
					style={{ height: this.state.thumbHeight, top: this.state.scrollTop }}
				/>
			</div>
		</div>
	);
}

export default ScrollWrapper;