import { string2color } from "./converters";
import { optimalTextColor, mixColors, alphaMixColors } from "./colorHelper";
/**
 * Returns styling for Components that have a transparent color
 * @param {string} color1 the first color of the gradient
 * @param {string} color2 the second color of the gradient
 * @param {string} checker1 the first color of the checker texture
 * @param {string} checker2 the second color of the checker texture
 * @param {string} checkerSize the size of the checker texture with units
 * @param {string} gradientDirection the direction of the gradient
 * @returns {object} styling
 * @example
 * <div style={checker(lowA, highA, "#aaa", "lightgray", "0.5rem", "45deg")}/>
 */
const checker = (color1, color2, checker1, checker2, checkerSize, gradientDirection="90deg") => {
	let checkerSizeNumber = parseFloat(checkerSize);
	let checkerSizeUnit = /([a-z]+)$/.exec(checkerSize)[1];
	let halfCheckerSize = checkerSizeNumber / 2 + checkerSizeUnit;
	let c1 = string2color(color1);
	let c2 = string2color(color2);
	let c3 = string2color(checker1);
	let c4 = string2color(checker2);
	let optimalColor = optimalTextColor(alphaMixColors(mixColors(c1, c2), mixColors(c3, c4)).rgb);
	return {
		color: optimalColor,
		backgroundImage: `
			linear-gradient(${gradientDirection}, ${color1},${color2}),
			linear-gradient(45deg, ${checker1} 25%, transparent 25%),
			linear-gradient(-45deg, ${checker1} 25%, transparent 25%),
			linear-gradient(45deg, transparent 75%, ${checker1} 75%),
			linear-gradient(-45deg, transparent 75%, ${checker1} 75%),
			linear-gradient(${checker2}, ${checker2})`,
		backgroundSize: `
			auto,
			${checkerSize} ${checkerSize},
			${checkerSize} ${checkerSize},
			${checkerSize} ${checkerSize},
			${checkerSize} ${checkerSize},
			auto`,
		backgroundPosition: `
			0 0,
			0 0,
			0 ${halfCheckerSize},
			${halfCheckerSize} -${halfCheckerSize},
			-${halfCheckerSize} 0,
			0 0`,
	}
}

export { checker };